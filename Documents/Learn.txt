https://www.bilibili.com/video/av28871471?p=9 Django 接口

https://www.bilibili.com/video/BV1KE41117XV?p=33 flutter

3. 认证。
authentication_classes = [MyAuthentication]
class MyAuthentication(object):
    def authenticate(self,request):
        token = request._request.GET.get('token')
        if not token :
            raise exceptions.AuthenticationFailed("认证失败鸟！")
        return ('Alex',None)
    def authenticate_header(self,val):
        pass


2. RESTful API规范
   1. HTTPS
   2. api.easypass.com 或者 easypass.com/api/ 
   3. 一般带个版本，v1，v2之类的。
   4. 面向资源，所以用名词作为url名
   5. method 
        get 得到资源 查
        post 新建资源 增
        put 更新资源（全部更新） 改
        patch 更新资源（局部更新） 改
        delete 删除资源 删
   6. URL上加参数作为搜索条件。
   7. 状态码
   8. 当4XX的状态时候，error 内容为报错信息。
   9. 不同method时候的一些小标准（好像没用），比如创建后返回完整资源数据。什么什么的。
   10. 单体里面带着URL方便访问。

决定重新开始学习.
1.django-admin startproject psite
python manage.py startapp app01

URL: url(r'students/', views.StudentsView.as_view()),
View:
class StudentsView(View): #实现请求中事先或者事后做点什么.
    def dispatch(self, request , *args, **kwargs):
        print('before')
        ret = super(StudentsView,self).dispatch(request , *args , **kwargs)
        print('after')
        return ret 

    def get(self,request , *args, **kwargs):
        user_list = ["dddd","aaaaa"]
        rt = LHKit.LHResult()
        rt['data'] = user_list
        return HttpResponse( json.dumps( rt ) )
    def post(self,request , *args, **kwargs):
        user_list = ["Post","Post"]
        rt = LHKit.LHResult()
        rt['data'] = user_list
        return HttpResponse( json.dumps( rt ) )
@csrf_except # 打开'django.middleware.csrf.CsrfViewMiddleware'的时候,装饰者不需要认证.
@csrf_protect # 关闭'django.middleware.csrf.CsrfViewMiddleware'的时候,装饰着需要认证.

CBV模式下免除验证
from django.utils.decorators import method_decorator
from django.views.decorators.csrf import csrf_exempt,csrf_protect

    @method_decorator(csrf_exempt)
    def dispatch(self, request , *args, **kwargs):
        print('before')
        ret = super(StudentsView,self).dispatch(request , *args , **kwargs)
        print('after')
        return ret 
或者
@method_decorator(csrf_exempt, name = "dispatch")

